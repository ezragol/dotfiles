(defvar powerreveal false)
(defvar volumereveal false)
(defvar musicreveal false)
(defvar wifireveal false)
(defvar dnd false)

(deflisten volume
  :initial 0
"tail -f ~/.config/hypr/volume.txt")

(deflisten muted
  :initial "yes"
"tail -f ~/.config/hypr/mute.txt")

(defpoll wtitle
  :interval "2s"
  :initial ""
  "hyprctl activewindow | grep title | awk -F'title:' '{print (NF>1)? $NF : \"\"}' | rev | cut -d '-' -f1 | rev")

(defvar currenthover "")
(defvar losthover "")

(defvar statsvisible false)

(deflisten title
  :initial ""
  "playerctl --follow metadata --format {{title}}"
)

(deflisten length
  :initial "0"
  "playerctl --follow metadata --format {{mpris:length}}"
)

(defpoll pos
  :interval "1s"
  :initial "0"
  :run-while {title != ""}
  "/home/ezra/.config/hypr/time.sh"
)

(defpoll position
  :initial 0
  :interval "1s"
  :run-while {title != ""}
  "/home/ezra/.config/hypr/position.sh"
)

(deflisten playing
  :initial "Paused"
  "playerctl --follow status"
)

(defpoll brightness
  :interval "1s"
  :run-while {statsvisible}
  "cat /sys/class/backlight/intel_backlight/brightness"
)

(defpoll numchrome
  :interval "10s"
  :initial 0
"/home/ezra/.config/eww/num.sh google-chrome")

(defpoll numspotify
  :interval "10s"
  :initial 0
"/home/ezra/.config/eww/num.sh Spotify")

(defpoll numcode
  :interval "10s"
  :initial 0
"/home/ezra/.config/eww/num.sh Code")

(defpoll wifi
  :interval "30s"
  :initial ""
"iwgetid -r")

(defwidget hoverbtn [name class onclick ?pointer]
  (eventbox
    :onhover "eww update currenthover=${name} && eww update losthover=\"\""
    :cursor {pointer ? "pointer" : ""}
    :onhoverlost "eww update losthover=${name}"
    (button
      :class {currenthover == name && losthover != name ? "hovered " + class : class}
      :onclick {onclick}
      (children)
    )
  )
)

(defwidget zerobasednum [num class]
  (label :class {class} :text {num < 10 ? ("0${num}") : num})
)

(defwidget icon [name ?class ?scale]
  (image
    :path "/home/ezra/.config/hypr/images/${name}"
    :image-width {scale != "" ? scale : 18}
    :image-height {scale != "" ? scale : 18}
    :class {class}
  )
)

(defwidget papicon [name ?class ?scale]
  (icon :name "../../../../../usr/share/icons/${name}" :class {class} :scale {scale})
)

(defwidget volumeicon [scale]
  (icon :name "volume_${muted == "yes" ? "off" : volume < 100 ? volume == 0 ? "mute" : "low" : "high"}.png" :scale {scale})
)

; ------------------------------ windows --------------------------------

(defwindow dock
  :monitor 0
  :geometry (geometry
    :x 0
    :y 0
    :width "100%"
    :anchor "top center"
  )
  :stacking "fg"
  :exclusive true
  :focusable false
  (eventbox
    :onhoverlost "eww update currenthover=\"\""
    (centerbox
      (box
        :halign "start"
        :space-evenly false
        (box
          :space-evenly false
          :class "dockbutton pbutton"
          (hoverbtn
            :name "powermenu"
            :class "pbut"
            :onclick "eww update powerreveal=${!powerreveal}"
            (icon :name "arch.svg")
          )
          (revealer
            :reveal {powerreveal}
            :transition "slideright"
            :duration "250ms"
            (box
              :halign "center"
              :space-evenly false
              (hoverbtn
                :name "poweroff"
                :class "pwrbutton"
                :onclick "shutdown now"
                "power off"
              )
              (hoverbtn
                :name "reboot"
                :class "pwrbutton"
                :onclick "reboot"
                "reboot"
              )
            )
          )
        )
        (box
          :class "dockbutton volume"
          :space-evenly false
          (hoverbtn
            :name "volumemenu"
            :class "icon"
            :onclick "eww update volumereveal=${!volumereveal}"
            (volumeicon :scale 20)
          )
          (revealer
            :reveal {volumereveal}
            :transition "slideright"
            :duration "250ms"
            (box
              :space-evenly false
              :class "slider"
              (scale
                :max 101
                :width 100
                :height 3
                :value {volume / 2}
                :onchange "/home/ezra/.config/hypr/setvol.sh {}"
              )
            )
          )
        )
        (hoverbtn
          :name "chrome"
          :onclick "/home/ezra/.config/eww/select.sh google-chrome google-chrome-stable flags --ozone-platform-hint=auto --ozone-platform=wayland &"
          :class "dockbutton launchbtn"
          :pointer true
          (box
            :space-evenly false
            (icon :name "chrome.png" :class "song" :scale 20)
            (label :class "lbtnright" :text "chrome${numchrome > 0 ? ' ('+numchrome+')' : ''}")
          )
        )
        (hoverbtn
          :name "spotify"
          :onclick "/home/ezra/.config/eww/select.sh Spotify spotify &"
          :class "dockbutton launchbtn"
          :pointer true
          (box
            :space-evenly false
            (icon :name "spotify.svg" :class "song")
            (label :class "lbtnright" :text "spotify${numspotify > 0 ? ' ('+numspotify+')' : ''}")
          )
        )
        (hoverbtn
          :name "code"
          :onclick "/home/ezra/.config/eww/select.sh Code code"
          :class "dockbutton launchbtn"
          :pointer true
          (box
            :space-evenly false
            (icon :name "code.svg" :class "song")
            (label :class "lbtnright" :text "vs code${numcode > 0 ? ' ('+numcode+')' : ''}")
          )
        )
      )
      (label :class "percent" :text {wtitle})
      (box
        :halign "end"
        :space-evenly false
        (box
          :class "dockbutton music"
          :space-evenly false
          (box
            :space-evenly false
            :class "musicleft"
            :visible {title != ""}
            (revealer
              :reveal {musicreveal && title != ""}
              :transition "slideright"
              :duration "250ms"
              (box
                :space-evenly false
                (hoverbtn
                  :name "audioback"
                  :class "action icon"
                  :onclick "playerctl back"
                  (icon :name "audio_back.png" :scale 23)
                )
                (hoverbtn
                  :name "audioplay"
                  :class "action icon"
                  :onclick "playerctl play-pause"
                  (icon :name "audio_${playing == "Paused" ? "play" : "pause"}.png" :scale 20)
                )
                (hoverbtn
                  :name "audionext"
                  :class "action icon last"
                  :onclick "playerctl next"
                  (icon :name "audio_next.png" :scale 23)
                )
              )
            )
            (button
              :onclick "/home/ezra/.config/eww/select.sh Spotify spotify &"
              (box
                :space-evenly false
                (label :class "icon" :text {title} :wrap true :limit-width 20)
                "("
                  {pos}
                  "/"
                  (label :text {round(length / 60000000, 0) < (length / 60000000) ? round(length / 60000000, 0) : (round(length / 60000000, 0) - 1)})
                  ":"
                  (zerobasednum
                    :num {round(((length / 60000000) - (round(length / 60000000, 0) < (length / 60000000) ? round(length / 60000000, 0) : (round(length / 60000000, 0) - 1))) * 60, 0)}
                    :class ""
                  )
                  (label :class "song" :text ")")
              )
            )
          )
          (hoverbtn
            :name "music"
            :onclick "eww update musicreveal=${!musicreveal}"
            :class "launchbtn"
            (icon :name "music.png")
          )
        )
        (box
          :class "dockbutton bell"
          (hoverbtn
            :name "dnd"
            :class "launchbtn"
            :onclick "makoctl mode -t dnd && eww update dnd=${!dnd}"
            (icon :name "bell${dnd ? "_off" : ""}.png" :scale 19)
          )
        )
        (box
          :class "dockbutton wifi"
          :space-evenly false
          (box
            :class "ssid"
            {wifi}
          )
          (box
            :class "icon"
            (icon :name "wifi.png" :scale 20)
          )
        )
        (box
          :class "dockbutton battery"
          :space-evenly false
          (box
            :class "batteryperc"
            {EWW_BATTERY.BAT0.capacity + "%"}
          )
          (box
            :class "icon"
            (icon :name "battery_${EWW_BATTERY.BAT0.status == "Charging" ? "charging" : EWW_BATTERY.BAT0.capacity < 10 ? "critical" : EWW_BATTERY.BAT0.capacity < 25 ? "low" : EWW_BATTERY.BAT0.capacity < 40 ? "down" : EWW_BATTERY.BAT0.capacity < 55 ? "mid" : EWW_BATTERY.BAT0.capacity < 70 ? "up" : EWW_BATTERY.BAT0.capacity < 85 ? "high" : "full"}.png")
          )
        )
        (box
          :class "dockbutton docktime"
          :space-evenly false
          (label
            :class "whattime"
            :text {formattime(EWW_TIME, "%l:%M %p")}
          )
          (box
            :class "icon"
            (label
              :class "timeofday"
              :text {formattime(EWW_TIME, "%d")}
            )
          )
        )
      )
    )
  )
)

(defwidget stat [?width]
  (box
    :class "stat"
    :style "background-color: ${statsvisible ? "rgba(38, 38, 38, 0.9)" : "transparent"};"
    (children)
  )
)

(defwindow stats
  :monitor 0
  :geometry (geometry
    :x 0
    :y 0
    :width "100%"
    :height "96.5%"
    :anchor "center"
  )
  :stacking "fg"
  :exclusive false
  :focusable false
  (box
    :class "statcontainer"
    :orientation "v"
    :halign "center"
    :space-evenly false
    (box
      :space-evenly false
      (stat
        (box
          :width 410
          :orientation "v"
          :halign "center"
          :valign "center"
          (box
            :class "progress"
            :valign "center"
            :halign "center"
            :space-evenly false
            (progress
              :value {EWW_CPU.avg}
              :class "bar firstbar"
            )
            (icon :name "cpu.png" :scale 43)
          )
          (box
            :class "progress"
            :halign "center"
            :valign "center"
            :space-evenly false
            (progress
              :value {EWW_RAM.used_mem_perc}
              :class "bar"
            )
            (icon :name "memory.png" :scale 45)
          )
          (box
            :class "progress"
            :halign "center"
            :valign "center"
            :space-evenly false
            (progress
              :value {EWW_TEMPS["CORETEMP_CORE_0"]}
              :class "bar"
            )
            (icon :name "temp.png" :scale 46)
          )
          (box
            :class "progress"
            :halign "center"
            :valign "center"
            :space-evenly false
            (progress
              :value {EWW_DISK["/"].used_perc}
              :class "bar"
            )
            (icon :name "disk.png" :scale 45)
          )
          (box
            :class "progress"
            :halign "center"
            :valign "center"
            :space-evenly false
            (progress
              :value {brightness / 960}
              :class "bar"
            )
            (icon :name "brightness_${brightness / 960 < 25 ? "low" : brightness / 960 < 50 ? "down" : brightness / 960 < 75 ? "mid" : "high"}.png" :scale 45)
          )
        )
      )
      (box
        :width 875
        :height 469
        :class "stat"
        :style "border: 2px solid #222222;"
      )
      (box
        :orientation "v"
        :space-evenly false
        (stat
          (box
            :width 335
            :height 202
            :space-evenly false
            :yalign "start"
            :orientation "v"
            (label
              :class "statbigtime"
              :xalign 0.0
              :text {formattime(EWW_TIME, "%l:%M")}
            )
            (label
              :class "statdate"
              :xalign 0.0
              :text {formattime(EWW_TIME, "%A, %B %d")}
            )
          )
        )
        (stat
          (box
            :height 100
            :halign "center"
            :space-evenly false
            (hoverbtn
              :name "bigshutdown"
              :class "big"
              :onclick "shutdown now"
              :pointer true
              (papicon :name "Papirus/64x64/apps/gnome-shutdown.svg" :scale 80)
            )
            (hoverbtn
              :name "bigreboot"
              :class "big"
              :onclick "reboot"
              :pointer true
              (papicon :name "Papirus/64x64/apps/system-reboot.svg" :scale 80)
            )
            (hoverbtn
              :name "bigsuspend"
              :class "big"
              :onclick ""
              :pointer true
              (papicon :name "Papirus/64x64/apps/system-suspend.svg" :scale 80)
            )
          )
        )
      )
    )
    (box
      (box
        :width 800
      )
      (box
        :width 800
        :height 590
        :class "stat"
        :style "border: 2px solid #222222;"
      )
    )
  )
)
