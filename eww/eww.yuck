(defvar powerreveal false)
(defvar musicreveal false)
(defvar dnd false)
(defvar caps false)

(defvar wtitle "")
(defvar workspace "")

(defvar currenthover "")
(defvar losthover "")

(deflisten volume
  :initial 0
"tail -f ~/.config/eww/volume.txt")

(deflisten muted
  :initial "yes"
"tail -f ~/.config/eww/mute.txt")

(deflisten mic
  :initial "yes"
"tail -f ~/.config/eww/micmute.txt")

(deflisten title
  :initial ""
  "playerctl --follow metadata --format {{title}}"
)

(deflisten length
  :initial "0"
  "playerctl --follow metadata --format {{mpris:length}}"
)

(defpoll pos
  :interval "1s"
  :initial "0"
  :run-while {title != ""}
  "$HOME/.config/eww/time.sh"
)

(defpoll numchrome
  :interval "10s"
  :initial 0
"$HOME/.config/eww/num.sh google-chrome")

(defpoll numspotify
  :interval "10s"
  :initial 0
"$HOME/.config/eww/num.sh Spotify")

(defpoll numcode
  :interval "10s"
  :initial 0
"$HOME/.config/eww/num.sh Code")

(defpoll wifi
  :interval "30s"
  :initial "no wifi"
"iwgetid -r")

(defpoll uptime
  :interval "60s"
"uptime -p")

(defwidget hoverbtn [name class onclick ?pointer]
  (eventbox
    :onhover "eww update currenthover=${name} && eww update losthover=\"\""
    :cursor {pointer ? "pointer" : ""}
    :onhoverlost "eww update losthover=${name}"
    (button
      :class {currenthover == name && losthover != name ? "hovered " + class : class}
      :onclick {onclick}
      (children)
    )
  )
)

(defwidget zerobasednum [num class]
  (label :class {class} :text {num < 10 ? ("0${num}") : num})
)

(defwidget icon [name ?class ?scale]
  (image
    :path "${EWW_CONFIG_DIR}/images/${name}"
    :image-width {scale != "" ? scale : 18}
    :image-height {scale != "" ? scale : 18}
    :class {class}
  )
)

(defwidget volumeicon [scale]
  (icon :name "volume_${muted == "yes" ? "off" : volume < 100 ? volume == 0 ? "mute" : "low" : "high"}.png" :scale {scale})
)

; ------------------------------ windows --------------------------------

(defwindow dock
  :monitor 0
  :geometry (geometry
    :x 0
    :y 0
    :width "100%"
    :anchor "top center"
  )
  :stacking "fg"
  :exclusive true
  :focusable false
  (eventbox
    :onhoverlost "eww update currenthover=\"\""
    (centerbox
      (box
        :halign "start"
        :space-evenly false
        (box
          :space-evenly false
          :class "dockbutton pbutton"
          (hoverbtn
            :name "powermenu"
            :class "pbut"
            :onclick "eww update powerreveal=${!powerreveal}"
            (box
              :tooltip "menu"
              (icon :name "arch.svg")
            )
          )
          (revealer
            :reveal {powerreveal}
            :transition "slideright"
            :duration "250ms"
            (box
              :halign "center"
              :space-evenly false
              (hoverbtn
                :name "poweroff"
                :class "pwrbutton"
                :onclick "shutdown now"
                "power off"
              )
              (hoverbtn
                :name "reboot"
                :class "pwrbutton"
                :onclick "reboot"
                "reboot"
              )
              (hoverbtn
                :name "suspend"
                :class "pwrbutton"
                :onclick "hyprlock &"
                "suspend"
              )
            )
          )
          (hoverbtn
            :name "exit"
            :class "tty"
            :onclick "hyprctl dispatch exit"
            (box
              :tooltip "exit to tty"
              (icon :name "console.svg" :scale 20)
            )
          )
          (box
            :tooltip "active workspace"
            :class "workspace"
            (label :text "w${workspace}")
          )
        )
        (hoverbtn
          :name "chrome"
          :onclick "${EWW_CONFIG_DIR}/select.sh google-chrome google-chrome-stable --ozone-platform-hint=auto --ozone-platform=wayland &"
          :class "dockbutton launchbtn"
          :pointer true
          (box
            :space-evenly false
            (icon :name "chrome.png" :class "song" :scale 20)
            (label :class "lbtnright" :text "chrome${numchrome > 0 ? ' ('+numchrome+')' : ''}")
          )
        )
        (hoverbtn
          :name "spotify"
          :onclick "${EWW_CONFIG_DIR}/select.sh Spotify spotify &"
          :class "dockbutton launchbtn"
          :pointer true
          (box
            :space-evenly false
            (icon :name "spotify.svg" :class "song")
            (label :class "lbtnright" :text "spotify${numspotify > 0 ? ' ('+numspotify+')' : ''}")
          )
        )
        (hoverbtn
          :name "code"
          :onclick "${EWW_CONFIG_DIR}/select.sh Code code"
          :class "dockbutton launchbtn"
          :pointer true
          (box
            :space-evenly false
            (icon :name "code.svg" :class "song")
            (label :class "lbtnright" :text "vs code${numcode > 0 ? ' ('+numcode+')' : ''}")
          )
        )
      )
      (box :class "center workspace"
        :space-evenly false
        (label :text {formattime(EWW_TIME, "%A, %B %d")})
        (label :visible {wtitle != "null"} :text {wtitle != "null" ? wtitle : ""})
        (label :visible {caps} :text {caps ? "CAPS" : ""})
      )
      (box
        :halign "end"
        :space-evenly false
        (box
          :class "dockbutton music"
          :space-evenly false
          (box
            :space-evenly false
            :class "musicleft"
            (revealer
              :reveal {musicreveal}
              :transition "slideright"
              :duration "250ms"
              (button
                :onclick "${EWW_CONFIG_DIR}/select.sh Spotify spotify &"
                (box
                  :space-evenly false
                  (label :class "title" :text {title != "" ? title : "no music playing"} :wrap true :limit-width 20)
                  (box
                    ; :visible {title != ""}
                    :space-evenly false
                    :class "songtime"
                    "("
                      {pos}
                      "/"
                      (label :text {round(length / 60000000, 0) < (length / 60000000) ? round(length / 60000000, 0) : (round(length / 60000000, 0) - 1)})
                      ":"
                      (zerobasednum
                        :num {round(((length / 60000000) - (round(length / 60000000, 0) < (length / 60000000) ? round(length / 60000000, 0) : (round(length / 60000000, 0) - 1))) * 60, 0)}
                        :class ""
                      )
                      (label :text ")")
                  )
                )
              )
            )
          )
          (hoverbtn
            :name "music"
            :onclick "eww update musicreveal=${!musicreveal}"
            :class "launchbtn"
            (box
              :tooltip "track info"
              (icon :name "music.png" :scale 21)
            )
          )
        )
        (box
          :class "dockbutton bell title"
          :tooltip "do not disturb"
          (hoverbtn
            :name "dnd"
            :class "launchbtn"
            :onclick "${EWW_CONFIG_DIR}/dndtoggle.sh && eww update dnd=${!dnd}"
            (icon :name "bell${dnd ? "_off" : ""}.png" :scale 18)
          )
        )
        (box
          :class "dockbutton volume"
          :space-evenly false
          :tooltip "toggle mute"
          (hoverbtn
            :name "volumemenu"
            :class "icon"
            :onclick "${EWW_CONFIG_DIR}/mute.sh"
            (box
              (volumeicon :scale 19)
              (label :class "vol" :text {(volume /2) + "%"})
            )
          )
        )
        (box
          :class "dockbutton volume"
          :space-evenly false
          :tooltip "toggle mic"
          (hoverbtn
            :name "mic"
            :class "icon"
            :onclick "${EWW_CONFIG_DIR}/micmute.sh"
            (icon :name "mic${mic == " yes" ? "off" : ""}.png" :scale 18)
          )
        )
        (hoverbtn
          :name "wifi"
          :class "dockbutton wifi"
          :onclick "alacritty --hold -e ${EWW_CONFIG_DIR}/wifi.sh &"
          (box
            :space-evenly false
            (box
              :class "ssid"
              {wifi}
            )
            (box
              :class "icon"
              (icon :name "wifi.png" :scale 19)
            )
          )
        )
        (box
          :class "dockbutton battery"
          :space-evenly false
          :tooltip {replace(replace(replace(replace(EWW_BATTERY.BAT0.status, "D", "d"), "C", "c"), "N", "n"), "F", "f")}
          (box
            :class "batteryperc"
            {EWW_BATTERY.BAT0.capacity + "%"}
          )
          (box
            :class "icon"
            (icon :name "battery_${EWW_BATTERY.BAT0.status == "Charging" ? "charging" : EWW_BATTERY.BAT0.capacity < 10 ? "critical" : EWW_BATTERY.BAT0.capacity < 25 ? "low" : EWW_BATTERY.BAT0.capacity < 40 ? "down" : EWW_BATTERY.BAT0.capacity < 55 ? "mid" : EWW_BATTERY.BAT0.capacity < 70 ? "up" : EWW_BATTERY.BAT0.capacity < 85 ? "high" : "full"}.png")
          )
        )
        (box
          :class "dockbutton docktime"
          :space-evenly false
          :tooltip {uptime}
          (label
            :class "whattime"
            :text {formattime(EWW_TIME, "%l:%M %p")}
          )
        )
      )
    )
  )
)